import "ds-test/test.sol";
import "../contracts/RPG.sol";

contract TestRPG is DSTest {
    RPG rpg;
    uint256 public initialBalance = 1 ether;

    function setUp() public {
        rpg = new RPG(/* constructor arguments */);
    }

    function testMint() public {
        uint256 initialTokenCount = rpg.totalSupply();
        uint256 mintPrice = rpg.mintPrice();

        // Send the correct amount of Ether to the mint function
        rpg.mint{value: mintPrice}();

        // Check that the token count increased by 1
        assertEq(rpg.totalSupply(), initialTokenCount + 1, "Token count did not increase");

        // Check that the last token was minted to the test contract
        assertEq(rpg.ownerOf(initialTokenCount + 1), address(this), "Last token was not minted to the test contract");
    }

    function testFailMintWrongChain() public {
        // Set the contract's parentChainId to a different chain
        rpg.setParentChainId(1234);

        // Try to mint a token. This should fail because the chain is wrong
        rpg.mint();
    }

    function testFailMintInsufficientEther() public {
        // Try to mint a token without sending enough Ether. This should fail
        rpg.mint();
    }
}